[package]
name = "soulgateengine"
description = "Rusty WebGPU API wrapper"
version = "0.10.0"
edition = "2021"
rust-version = "1.64"
 

[features]
 


  

[dependencies]
# These are all for wpgu 
arrayvec = "0.7"
log = "0.4"
parking_lot = ">=0.11,<0.13"
raw-window-handle = "0.5"
serde = { version = "1", features = ["derive"], optional = true }
smallvec = "1"
static_assertions = "1.1.0"
wgpu = "0.14.0"
winit = "0.27.1"
async-executor = "1.4.1"
env_logger = "0.9"
pollster = "0.2"
bytemuck = { version = "1.4", features = ["derive"] }
glam = "0.21.3" 

##these are all for quake-render 
cgmath = "0.17.0"
error-chain = "0.12.1"
byteorder = "1.3.2"

[dev-dependencies]
bitflags = "1"
cfg-if = "1"
bytemuck = { version = "1.4", features = ["derive"] }
glam = "0.21.3"
ddsfile = "0.5"
futures-intrusive = "0.4"
env_logger = "0.9"
log = "0.4"
noise = { version = "0.7", default-features = false }
obj = "0.10"
pollster = "0.2"
png = "0.17.5"
nanorand = { version = "0.7", features = ["wyrand"] }
winit = "0.27.1"  # for "halmark" example                                                        # for "halmark" example

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
async-executor = "1.0"

# import wgpu-types as 'wgt'
[dependencies.wgt]
package = "wgpu-types"
version = "0.14"


[dependencies.naga]
features = ["clone"]
optional = true

# used to test all the example shaders
[dev-dependencies.naga]
features = ["wgsl-in"]

[target.'cfg(target_arch = "wasm32")'.dependencies.naga]
features = ["wgsl-out"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { version= "0.3.60", features = [
    "Document",
    "Navigator",
    "Node",
    "NodeList",
    "Gpu",
    "GpuAdapter",
    "GpuAddressMode",
    "GpuAutoLayoutMode",
    "GpuBindGroup",
    "GpuBindGroupDescriptor",
    "GpuBindGroupEntry",
    "GpuBindGroupLayout",
    "GpuBindGroupLayoutDescriptor",
    "GpuBindGroupLayoutEntry",
    "GpuBlendComponent",
    "GpuBlendFactor",
    "GpuBlendOperation",
    "GpuBlendState",
    "GpuBuffer",
    "GpuBufferBinding",
    "GpuBufferBindingLayout",
    "GpuBufferBindingType",
    "GpuBufferDescriptor",
    "GpuCanvasAlphaMode",
    "GpuCanvasContext",
    "GpuCanvasConfiguration",
    "GpuColorDict",
    "GpuColorTargetState",
    "GpuCommandBuffer",
    "GpuCommandBufferDescriptor",
    "GpuCommandEncoder",
    "GpuCommandEncoderDescriptor",
    "GpuCompareFunction",
    "GpuCompilationInfo",
    "GpuCompilationMessage",
    "GpuCompilationMessageType",
    "GpuComputePassDescriptor",
    "GpuComputePassEncoder",
    "GpuComputePipeline",
    "GpuComputePipelineDescriptor",
    "GpuCullMode",
    "GpuDepthStencilState",
    "GpuDevice",
    "GpuDeviceDescriptor",
    "GpuDeviceLostInfo",
    "GpuDeviceLostReason",
    "GpuError",
    "GpuErrorFilter",
    "GpuExtent3dDict",
    "GpuFeatureName",
    "GpuFilterMode",
    "GpuFragmentState",
    "GpuFrontFace",
    "GpuImageCopyBuffer",
    "GpuImageCopyExternalImage",
    "GpuImageCopyTexture",
    "GpuImageCopyTextureTagged",
    "GpuImageDataLayout",
    "GpuIndexFormat",
    "GpuLoadOp",
    "gpu_map_mode",
    "GpuMipmapFilterMode",
    "GpuMultisampleState",
    "GpuObjectDescriptorBase",
    "GpuOrigin2dDict",
    "GpuOrigin3dDict",
    "GpuOutOfMemoryError",
    "GpuPipelineDescriptorBase",
    "GpuPipelineLayout",
    "GpuPipelineLayoutDescriptor",
    "GpuPowerPreference",
    "GpuPrimitiveState",
    "GpuPrimitiveTopology",
    "GpuProgrammableStage",
    "GpuQuerySet",
    "GpuQuerySetDescriptor",
    "GpuQueryType",
    "GpuQueue",
    "GpuRenderBundle",
    "GpuRenderBundleDescriptor",
    "GpuRenderBundleEncoder",
    "GpuRenderBundleEncoderDescriptor",
    "GpuRenderPassColorAttachment",
    "GpuRenderPassDepthStencilAttachment",
    "GpuRenderPassDescriptor",
    "GpuRenderPassEncoder",
    "GpuRenderPipeline",
    "GpuRenderPipelineDescriptor",
    "GpuRequestAdapterOptions",
    "GpuSampler",
    "GpuSamplerBindingLayout",
    "GpuSamplerBindingType",
    "GpuSamplerDescriptor",
    "GpuShaderModule",
    "GpuShaderModuleDescriptor",
    "GpuStencilFaceState",
    "GpuStencilOperation",
    "GpuStorageTextureAccess",
    "GpuStorageTextureBindingLayout",
    "GpuStoreOp",
    "GpuSupportedFeatures",
    "GpuSupportedLimits",
    "GpuTexture",
    "GpuTextureAspect",
    "GpuTextureBindingLayout",
    "GpuTextureDescriptor",
    "GpuTextureDimension",
    "GpuTextureFormat",
    "GpuTextureSampleType",
    "GpuTextureView",
    "GpuTextureViewDescriptor",
    "GpuTextureViewDimension",
    "GpuUncapturedErrorEvent",
    "GpuUncapturedErrorEventInit",
    "GpuValidationError",
    "GpuVertexAttribute",
    "GpuVertexBufferLayout",
    "GpuVertexFormat",
    "GpuVertexState",
    "GpuVertexStepMode",
    "HtmlCanvasElement",
    "OffscreenCanvas",
    "ImageBitmap",
    "ImageBitmapRenderingContext",
    "Window",
    "WorkerGlobalScope",
    "WorkerNavigator"
] }
wasm-bindgen = "0.2.83"
js-sys = "0.3.60"
wasm-bindgen-futures = "0.4.33"
parking_lot = ">=0.11,<0.13"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
console_error_panic_hook = "0.1.7"
console_log = "0.2"
# We need these features in the framework examples
web-sys = { version="0.3.60", features = [
    "Location",
    "Blob",
    "RequestInit",
    "RequestMode",
    "Request",
    "Response"
] }
